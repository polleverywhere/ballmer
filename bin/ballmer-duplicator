#!/usr/bin/env ruby

# This console is usefulf or interacting with a presentation, which makes debugging
# a little easier since this is mostly munging with files.

require 'ballmer'

# Deal with piped input.
ppt = if $stdin.tty?
  Ballmer::Presentation.open(ARGV.shift)
else
  Ballmer::Presentation.read($stdin.read)
end

# Now duplicate the slides.
ARGV.shift.to_i.times do |n|
  # Copy the first slide to the end of the presentation.
  ppt.slides.push(ppt.slides.first).tap do |slide|
    slide.notes.body = "This is copy #{n + 1}.\n\nIt was created at #{Time.now}."
  end
end

# Now delete the first slide.
ppt.slides.delete ppt.slides.first

# Save to disk or buffer
ppt.commit

# Pipe this shiz out if it was piped in.
ppt.archive.zip.read { |chunk| $stdout.write chunk } unless $stdin.tty?